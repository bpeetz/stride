// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `init_logger`
// These types are ignored because they are not used by any `pub` functions: `LogOutput`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `flush`, `write`

Future<String> getLogs() => RustLib.instance.api.crateApiLoggingGetLogs();

class Logger {
  const Logger();

  static Future<void> debug({required String message}) =>
      RustLib.instance.api.crateApiLoggingLoggerDebug(message: message);

  static Future<void> error({required String message}) =>
      RustLib.instance.api.crateApiLoggingLoggerError(message: message);

  static Future<void> info({required String message}) =>
      RustLib.instance.api.crateApiLoggingLoggerInfo(message: message);

  static Future<void> trace({required String message}) =>
      RustLib.instance.api.crateApiLoggingLoggerTrace(message: message);

  static Future<void> warn({required String message}) =>
      RustLib.instance.api.crateApiLoggingLoggerWarn(message: message);

  @override
  int get hashCode => 0;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Logger && runtimeType == other.runtimeType;
}
